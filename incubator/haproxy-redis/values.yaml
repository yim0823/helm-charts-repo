# release namespace
namespace: default
# service account creation
serviceAccount:
  create: true
  # if empty will generate one based on the release name
  name:
image:
  name: haproxy
  tag: 1.8-alpine
  pullPolicy: IfNotPresent

haproxy:
  nodeSelector: {"nodepool_name" : "redis"}
  # node schedulling inter-pod anti affinity
  podAntiAffinity: soft
  replicas: 1
  # resource requirements for the container
  resources:
    requests:
      memory: 500Mi
      cpu: 500m
    limits:
      memory: 1000Mi
  # haproxy container frontend ports
  ports:
    master: 6379
    slave: 6380
  # haproxy connection origins (* for all)
  bindAddresses: "*"
  # stats functionality enablement and configuration
  stats:
    # http stats endpoint
    http:
      enable: false
      port: 9094
    # socket stats access
    socket:
      enable: true

# services configurations
services:
  # types available: ClusterIP | LoadBalancer
  type: LoadBalancer
  # annotations for the service endpoint
  annotations: {
    "cloud.google.com/load-balancer-type":"Internal"
    }
  # reserved IP for the master load balancer
  masterIP:
  # reserved IP for the master load balancer
  slaveIP:

# Redis backends configuration
redis:
  port: 6379
  # name of the redis helm release
  releaseName:
  # namespace for the redis setup
  releaseNamespace: 
  # name of the headless service of the redis statefulset
  serviceName:
  # available redis backend count (static config, no service registry + refresh)
  replicaCount:
  # max number of connections per backend
  maxConnections: 9900
  # connection check interval for backends (in seconds)
  checkSeconds: 1
