apiVersion: v1
kind: ConfigMap
metadata:
  name: health-configmap
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app: {{ template "redis-ha.fullname" . }}
data:
  ping_readiness_local.sh: |-
    #!/bin/bash
    REDIS_PORT={{ .Values.redis.port }}
    HOSTNAME="$(hostname)"
    set -eu

    ping_response=$(
      timeout -s 9 $1 \
      redis-cli \
{{- if .Values.auth }}
        -a "$AUTH" --no-auth-warning \
{{- end }}
        -h $HOSTNAME \
        -p $REDIS_PORT \
        ping
    )
    if [ "$ping_response" != "PONG" ]; then
      echo "$ping_response"
      exit 1
    fi

    info_response=$(
      timeout -s 9 $1 \
      redis-cli \
{{- if .Values.auth }}
        -a "$AUTH" --no-auth-warning \
{{- end }}
        -h $HOSTNAME \
        -p $REDIS_PORT \
        role
    )

    if [[ "$info_response" == *"master"* ]]; then
      echo "master, $info_response"
      exit 0
    else
      echo "$info_response"
      exit 1
    fi

  ping_liveness_local.sh: |-
    REDIS_PORT={{ .Values.redis.port }}
    HOSTNAME="$(hostname)"
    set -eu

    response=$(
      timeout -s 9 $1 \
      redis-cli \
{{- if .Values.auth }}
        -a "$AUTH" --no-auth-warning \
{{- end }}
        -h $HOSTNAME \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi

